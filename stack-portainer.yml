version: '3.7'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "1m"

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

volumes:
  portainer-data:

services:
  agent:
    <<: *default-opts
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent 
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
      resources:
        limits:
          cpus: '0.1'
          memory: 100M 
        reservations:
          cpus: '0.1'
          memory: 50M
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    <<: *default-opts
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify 
    volumes:
      - type: bind
        source: /gluster/volume1/portainer-data
        target: /data
    networks:
      - agent_network
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1 
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
      resources:
        limits:
          cpus: '0.20'
          memory: 200M 
        reservations:
          cpus: '0.1'
          memory: 50M
      placement:
        constraints:
          - node.role == manager
      labels:
        traefik.enable: "true"
        traefik.docker.network: traefik-public
        traefik.constraint-label: traefik-public
        traefik.http.routers.portainer-http.rule: Host(`example.com`) && PathPrefix(`/portainer`)
        traefik.http.routers.portainer-http.entrypoints: http
        traefik.http.routers.portainer-http.middlewares: https-redirect
        traefik.http.routers.portainer-https.rule: Host(`example.com`) && PathPrefix(`/portainer`)
        traefik.http.routers.portainer-https.entrypoints: https
        traefik.http.routers.portainer-https.tls: "true"
        traefik.http.routers.portainer-https.tls.certresolver: le
        traefik.http.services.portainer.loadbalancer.server.port: 9000
        traefik.http.middlewares.stripprefix-portainer.stripprefix.prefixes: /portainer
        # Security Headers
        traefik.http.middlewares.portainer-headers.headers.framedeny: "true"
        traefik.http.middlewares.portainer-headers.headers.sslredirect: "true"
        traefik.http.middlewares.portainer-headers.headers.forceSTSHeader: "true"
        traefik.http.routers.portainer-https.middlewares: portainer-headers,stripprefix-portainer@docker
